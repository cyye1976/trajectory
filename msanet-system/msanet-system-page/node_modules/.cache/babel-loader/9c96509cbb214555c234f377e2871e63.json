{"remainingRequest":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\babel-loader\\lib\\index.js!D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\src\\views\\vis\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\src\\views\\vis\\index.vue","mtime":1642780543017},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\babel.config.js","mtime":1642236318444},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybC1zZWFyY2gtcGFyYW1zLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBnZXRBY3Rpb24sIGdldEFjdGlvbkJsb2IsIHBvc3RBY3Rpb24sIHBvc3RBY3Rpb25CbG9iIH0gZnJvbSAnQC9hcGkvbWFuYWdlJzsKaW1wb3J0IHsgZ2V0QXBpQmFzZVVybCwgZ2V0RGF0YUltYWdlVXJsIH0gZnJvbSAnQC9hcGkvcmVxdWVzdDEnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpc3Q6IG51bGwsCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICBkYXRhSW1hZ2VVcmw6ICIiLAogICAgICBzcmNEYXRhSW1hZ2VMaXN0OiBbXSwKICAgICAgc2VsZWN0ZWRNb2RlbDogbnVsbCwKICAgICAgbW9kZWxPcHRpb25zOiBbXSwKICAgICAgZm9ybURhdGE6IHt9LAogICAgICBhY3RpdmU6IDAsCiAgICAgIGxvYWRSZXN1bHQ6IGZhbHNlLAogICAgICBpbmZlckltYWdlOiAiIiwKICAgICAgdmlzTWVzc2FnZVZpc2libGU6IHRydWUsCiAgICAgIGFjdGlvbjogZ2V0QXBpQmFzZVVybCgpICsgJy9pbnRlcnByZXRhdGlvbi9hbmFseXNlQW5kVmlzdWFsaXplRGF0YScsCiAgICAgIHZpc01lc3NhZ2U6IHsKICAgICAgICBkYXRhQ3JlYXRlVGltZTogIiIsCiAgICAgICAgbW9kZWxOYW1lOiAiIiwKICAgICAgICByZXN1bHRDcmVhdGVUaW1lOiAiIiwKICAgICAgICBkYXRhSW1hZ2VVcmw6ICIiCiAgICAgIH0sCiAgICAgIGRhdGFSZXN1bHRzTGlzdDogW10sCiAgICAgIGZvcm06IHt9LAogICAgICB2aXNDb250ZW50OiBbewogICAgICAgIGtleTogMCwKICAgICAgICBsYWJlbDogJ+WOn+WbvicKICAgICAgfSwgewogICAgICAgIGtleTogMSwKICAgICAgICBsYWJlbDogIlx1ODIzOVx1ODIzNlx1NjhDMFx1NkQ0QiIKICAgICAgfSwgewogICAgICAgIGtleTogMiwKICAgICAgICBsYWJlbDogIlx1NkQ3N1x1OTY0Nlx1NTIwNlx1NTI3MiIKICAgICAgfSwgewogICAgICAgIGtleTogMywKICAgICAgICBsYWJlbDogIlx1ODIyQVx1NTQxMVx1OTg4NFx1NkQ0QiIKICAgICAgfV0sCiAgICAgIHNlbGVjdGVkVmlzQ29udGVudDogW10sCiAgICAgIGFwaVVybDogewogICAgICAgIGdldFZpc01lc3NhZ2U6ICdpbnRlcnByZXRhdGlvbi9nZXRWaXNNZXNzYWdlJywKICAgICAgICBnZXRNb2RlbExpc3Q6ICdtb2RlbC9saXN0JywKICAgICAgICBnZXRGaWxlVVJMUGljdHVyZXM6ICdpbnRlcnByZXRhdGlvbi9nZXRGaWxlVVJMUGljdHVyZXMnCiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5mZXRjaFZpc01lc3NhZ2UoKTsKICAgIHRoaXMubG9hZE1vZGVsT3B0aW9ucygpOwogIH0sCiAgbWV0aG9kczogewogICAgb25DaGFuZ2VVcGxvYWQ6IGZ1bmN0aW9uIG9uQ2hhbmdlVXBsb2FkKGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIGNvbnNvbGUubG9nKFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZS5yYXcpKTsKICAgICAgdGhpcy52aXNNZXNzYWdlLmRhdGFJbWFnZVVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZS5yYXcpOwogICAgfSwKICAgIG9uU3VjY2Vzc1VwbG9hZDogZnVuY3Rpb24gb25TdWNjZXNzVXBsb2FkKHJlcywgZmlsZSwgZmlsZUxpc3QpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgIHZhciBhcnIgPSByZXMucmVzdWx0LnZpc1BpY3NbMF0uc2F2ZV9wYXRoLnNwbGl0KCIvIik7CiAgICAgIHZhciBmaWxlTmFtZSA9IGFyclthcnIubGVuZ3RoIC0gMV07CiAgICAgIGdldEFjdGlvbkJsb2IodGhpcy5hcGlVcmwuZ2V0RmlsZVVSTFBpY3R1cmVzICsgIi8iICsgZmlsZU5hbWUpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHZhciBibG9iID0gbmV3IHdpbmRvdy5CbG9iKFtyZXMuZGF0YV0pOwogICAgICAgIF90aGlzLmluZmVySW1hZ2UgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTsKICAgICAgfSk7IC8vIOaPkOWHuuaVsOWAvOe7k+aenAoKICAgICAgdmFyIGkgPSAwOwogICAgICB2YXIgZGF0YVJlc3VsdHMgPSByZXMucmVzdWx0LmFuYURhdGFbMF07CiAgICAgIHZhciBkYXRhUmVzdWx0Q29sb3JzID0gcmVzLnJlc3VsdC52aXNQaWNzWzBdLmJveF9jb2xvcjsKCiAgICAgIHdoaWxlIChpIDwgZGF0YVJlc3VsdHMubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5kYXRhUmVzdWx0c0xpc3QucHVzaCh7CiAgICAgICAgICAnZGF0YVJlc3VsdHMnOiBkYXRhUmVzdWx0c1tpXSwKICAgICAgICAgICdkYXRhUmVzdWx0Q29sb3JzJzogZGF0YVJlc3VsdENvbG9yc1tpXQogICAgICAgIH0pOwogICAgICAgIGkrKzsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2codGhpcy5kYXRhUmVzdWx0c0xpc3QpOwogICAgICB0aGlzLmxvYWRSZXN1bHQgPSBmYWxzZTsKICAgICAgdGhpcy5hY3RpdmUrKzsKICAgIH0sCiAgICBmZXRjaFZpc01lc3NhZ2U6IGZ1bmN0aW9uIGZldGNoVmlzTWVzc2FnZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBwb3N0QWN0aW9uKHRoaXMuYXBpVXJsLmdldFZpc01lc3NhZ2UgKyAnLycgKyB0aGlzLiRyb3V0ZS5xdWVyeS5pZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEucmVzdWx0KTsKICAgICAgICBfdGhpczIudmlzTWVzc2FnZSA9IHJlcy5kYXRhLnJlc3VsdDsKCiAgICAgICAgdmFyIGFyciA9IF90aGlzMi52aXNNZXNzYWdlLmRhdGFJbWFnZVVybC5zcGxpdCgiXFwiKTsKCiAgICAgICAgX3RoaXMyLnZpc01lc3NhZ2UuZGF0YUltYWdlVXJsID0gZ2V0RGF0YUltYWdlVXJsKGFyclthcnIubGVuZ3RoIC0gMV0pOwogICAgICAgIF90aGlzMi5zcmNEYXRhSW1hZ2VMaXN0ID0gW190aGlzMi52aXNNZXNzYWdlLmRhdGFJbWFnZVVybF07CiAgICAgIH0pOwogICAgfSwKICAgIGxvYWRNb2RlbE9wdGlvbnM6IGZ1bmN0aW9uIGxvYWRNb2RlbE9wdGlvbnMoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgZ2V0QWN0aW9uKHRoaXMuYXBpVXJsLmdldE1vZGVsTGlzdCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEucmVzdWx0KTsKICAgICAgICBfdGhpczMubW9kZWxPcHRpb25zID0gcmVzLmRhdGEucmVzdWx0LnJlY29yZHM7CiAgICAgIH0pOwogICAgfSwKICAgIG5leHQ6IGZ1bmN0aW9uIG5leHQoKSB7CiAgICAgIGlmICh0aGlzLmFjdGl2ZSA9PT0gMCkgewogICAgICAgIHRoaXMudmlzTWVzc2FnZVZpc2libGUgPSBmYWxzZTsKICAgICAgICB0aGlzLmxvYWRSZXN1bHQgPSB0cnVlOyAvLyB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKT0+eyAgIC8vVE9ETzrorr7nva7lu7bov5/miafooYws5aaC5p6c5qih5Z6L566X5rOV5bqT5Y+v55So5YiZ6K6w5b6X5Y675o6JCiAgICAgICAgLy8gICB0aGlzLmxvYWRSZXN1bHQgPSBmYWxzZQogICAgICAgIC8vICAgdGhpcy5pbmZlckltYWdlID0gZ2V0RGF0YUltYWdlVXJsKCJpbmZlcmVuY2UucG5nIikKICAgICAgICAvLyAgIGNvbnNvbGUubG9nKHRoaXMuaW5mZXJJbWFnZSkKICAgICAgICAvLyAgIHRoaXMuYWN0aXZlKysKICAgICAgICAvLyB9LDMwMDApOwoKICAgICAgICB0aGlzLmZvcm1EYXRhLm1vZGVsSWQgPSB0aGlzLnNlbGVjdGVkTW9kZWw7CiAgICAgICAgdGhpcy5mb3JtRGF0YS52aXNPcHRpb25zID0gdGhpcy5zZWxlY3RlZFZpc0NvbnRlbnQ7CiAgICAgICAgY29uc29sZS5sb2coJ3VwbG9hZCcpOwogICAgICAgIHRoaXMuJHJlZnMudXBsb2FkLnN1Ym1pdCgpOwogICAgICB9CgogICAgICB0aGlzLmFjdGl2ZSsrOwogICAgfQogIH0KfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n      <el-steps :active=\"active\" finish-status=\"success\">\n        <el-step title=\"完成相应操作\"></el-step>\n        <el-step title=\"可视化结果\"></el-step>\n      </el-steps>\n\n    <div v-if=\"visMessageVisible\" >\n      <div style=\"padding-top: 30px;justify-content: center; display: flex;\">\n        <el-card :body-style=\"{ padding: '0px' }\" shadow=\"hover\">\n          <el-image\n            style=\"width: 400px; height: 200px\"\n            :src=\"this.visMessage.dataImageUrl\"\n            :preview-src-list=\"[this.visMessage.dataImageUrl]\">\n          </el-image>\n          <div style=\"padding: 10px;\">\n            <el-upload\n              ref=\"upload\"\n              class=\"upload-demo\"\n              :action=\"action\"\n              :limit=\"1\"\n              :data=\"formData\"\n              :on-change=\"onChangeUpload\"\n              :on-success=\"onSuccessUpload\"\n              :auto-upload=\"false\">\n              <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>\n              <!--              <el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\">上传到服务器</el-button>-->\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg,png,bmp文件，且不超过10MB</div>\n            </el-upload>\n          </div>\n\n          <div style=\"padding: 10px;\">\n            <div>要使用的模型: </div>\n            <el-select label=\"要使用的模型\" v-model=\"selectedModel\" placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in modelOptions\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\">\n              </el-option>\n            </el-select>\n          </div>\n        </el-card>\n      </div>\n      <div style=\"padding-top: 30px;justify-content: center; display: flex;\">\n        <el-card :body-style=\"{ padding: '0px' }\" shadow=\"hover\">\n          <el-transfer v-model=\"selectedVisContent\" :data=\"visContent\" :titles=\"['未选择的', '已选择的']\"></el-transfer>\n        </el-card>\n      </div>\n    </div>\n    <div v-if=\"loadResult === true\" style=\"text-align: center\">\n      <el-main v-loading=\"loadResult\" v-if=\"loadResult === true\" style=\"height: 200px;\">\n        正在结果可视化处理，请稍后...\n      </el-main>\n     </div>\n    <div style=\"padding-top: 30px;justify-content: center; display: flex;\" v-if=\"visMessageVisible\">\n      <el-card :body-style=\"{ padding: '0px' }\" shadow=\"hover\">\n        <el-button class=\"el-footer\" type=\"success\" @click=\"next\">下一步</el-button>\n      </el-card>\n    </div>\n    <div v-if=\"active === 2\" style=\"padding-top: 30px; text-align: center\">\n      <el-main>\n        <el-row type=\"flex\" justify=\"center\" align=\"middle\">\n          <el-card  shadow=\"hover\">\n\n            <el-image\n              style=\"width: 512px;height: 512px\"\n              :src=\"this.inferImage\"\n              :preview-src-list=\"[this.inferImage]\">\n            </el-image>\n          </el-card>\n          <el-card  shadow=\"hover\">\n            <div style=\"width: 450px; height: 512px\">\n              <span>详细信息</span>\n              <div style=\"padding-bottom: 10px\"></div>\n<!--              <div-->\n<!--                v-for=\"item in this.dataResultsList\"-->\n<!--                :style=\"`color: ${item.dataResultColors}`\"-->\n<!--              >-->\n<!--              </div>-->\n              <el-table\n                :data=\"this.dataResultsList\"\n                border\n                style=\"width: 100%;\">\n                  <el-table-column align=\"center\" label=\"ID\" width=\"40px\">\n                    <template slot-scope=\"scope\">\n                      <div :style=\"`color: ${scope.row.dataResultColors}`\">\n                      {{ scope.$index }}\n                      </div>\n                    </template>\n                  </el-table-column>\n\n                <el-table-column label=\"目标位置[X, Y]\" >\n                  <template slot-scope=\"scope\">\n                    <div :style=\"`color: ${scope.row.dataResultColors}`\">\n                      {{ scope.row.dataResults.centerXY }}\n                    </div>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"目标大小[W, H]\" >\n                  <template slot-scope=\"scope\">\n                    <div :style=\"`color: ${scope.row.dataResultColors}`\">\n                      {{ scope.row.dataResults.WH }}\n                    </div>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"目标航向角\" >\n                  <template slot-scope=\"scope\">\n                    <div :style=\"`color: ${scope.row.dataResultColors}`\">\n                      {{ scope.row.dataResults.course }}\n                    </div>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </el-card>\n        </el-row>\n      </el-main>\n\n\n      <div style=\"padding-top: 30px;justify-content: center; display: flex;\">\n        <el-card :body-style=\"{ padding: '0px' }\" shadow=\"hover\">\n          <el-button type=\"primary\" @click=\"\">导出结果</el-button>\n        </el-card>\n      </div>\n    </div>\n\n\n  </div>\n</template>\n\n<style>\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n.avatar {\n  width: 178px;\n  height: 178px;\n  display: block;\n}\n\n\n</style>\n\n<script>\n\nimport { getAction, getActionBlob, postAction, postActionBlob } from '@/api/manage'\nimport { getApiBaseUrl, getDataImageUrl } from '@/api/request1'\n\nexport default {\n  data() {\n    return {\n      list: null,\n      listLoading: true,\n      dataImageUrl: \"\",\n      srcDataImageList: [],\n      selectedModel: null,\n      modelOptions:[],\n      formData: {},\n      active: 0,\n      loadResult: false,\n      inferImage: \"\",\n      visMessageVisible:true,\n      action: getApiBaseUrl() + '/interpretation/analyseAndVisualizeData',\n      visMessage:{\n        dataCreateTime: \"\",\n        modelName: \"\",\n        resultCreateTime: \"\",\n        dataImageUrl: \"\",\n      },\n      dataResultsList: [],\n      form:{},\n      visContent: [\n        {\n          key: 0,\n          label: '原图'\n        },\n        {\n          key: 1,\n          label: `船舶检测`,\n        },\n        {\n          key: 2,\n          label: `海陆分割`,\n        },\n        {\n          key: 3,\n          label: `航向预测`,\n        },\n      ],\n      selectedVisContent: [],\n      apiUrl:{\n        getVisMessage: 'interpretation/getVisMessage',\n        getModelList: 'model/list',\n        getFileURLPictures: 'interpretation/getFileURLPictures'\n      }\n    }\n  },\n  created() {\n    this.fetchVisMessage()\n    this.loadModelOptions()\n  },\n  methods: {\n    onChangeUpload(file, fileList) {\n      console.log(URL.createObjectURL(file.raw))\n      this.visMessage.dataImageUrl = URL.createObjectURL(file.raw);\n    },\n    onSuccessUpload(res, file, fileList){\n      console.log(res)\n      const arr = res.result.visPics[0].save_path.split(\"/\")\n      const fileName = arr[arr.length - 1]\n      getActionBlob(this.apiUrl.getFileURLPictures + \"/\" + fileName).then((res)=>{\n        let blob = new window.Blob([res.data])\n        this.inferImage = window.URL.createObjectURL(blob)\n      })\n\n      // 提出数值结果\n      let i = 0\n      const dataResults = res.result.anaData[0]\n      const dataResultColors = res.result.visPics[0].box_color\n      while(i<dataResults.length){\n        this.dataResultsList.push({\n          'dataResults': dataResults[i] ,\n          'dataResultColors': dataResultColors[i]\n        })\n        i++\n      }\n      console.log(this.dataResultsList)\n      this.loadResult = false\n      this.active++\n    },\n    fetchVisMessage(){\n      postAction(this.apiUrl.getVisMessage + '/' + this.$route.query.id).then((res)=>{\n        console.log(res.data.result)\n        this.visMessage = res.data.result\n\n        let arr = this.visMessage.dataImageUrl.split(\"\\\\\")\n        this.visMessage.dataImageUrl = getDataImageUrl(arr[arr.length-1])\n        this.srcDataImageList = [this.visMessage.dataImageUrl]\n      })\n    },\n    loadModelOptions(){\n      getAction(this.apiUrl.getModelList).then((res)=>{\n        console.log(res.data.result)\n        this.modelOptions = res.data.result.records\n      })\n    },\n    next(){\n      if (this.active === 0){\n        this.visMessageVisible = false\n        this.loadResult = true\n        // this.timer = setTimeout(()=>{   //TODO:设置延迟执行,如果模型算法库可用则记得去掉\n        //   this.loadResult = false\n        //   this.inferImage = getDataImageUrl(\"inference.png\")\n        //   console.log(this.inferImage)\n        //   this.active++\n        // },3000);\n        this.formData.modelId = this.selectedModel\n        this.formData.visOptions = this.selectedVisContent\n        console.log('upload')\n        this.$refs.upload.submit()\n      }\n      this.active++\n    },\n  }\n}\n</script>\n"],"sourceRoot":"src/views/vis"}]}