{"remainingRequest":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\src\\views\\vis\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\src\\views\\vis\\index.vue","mtime":1642780543017},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkIHsKICBib3JkZXI6IDFweCBkYXNoZWQgI2Q5ZDlkOTsKICBib3JkZXItcmFkaXVzOiA2cHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBvdmVyZmxvdzogaGlkZGVuOwp9Ci5hdmF0YXItdXBsb2FkZXIgLmVsLXVwbG9hZDpob3ZlciB7CiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGOwp9Ci5hdmF0YXItdXBsb2FkZXItaWNvbiB7CiAgZm9udC1zaXplOiAyOHB4OwogIGNvbG9yOiAjOGM5MzlkOwogIHdpZHRoOiAxNzhweDsKICBoZWlnaHQ6IDE3OHB4OwogIGxpbmUtaGVpZ2h0OiAxNzhweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KLmF2YXRhciB7CiAgd2lkdGg6IDE3OHB4OwogIGhlaWdodDogMTc4cHg7CiAgZGlzcGxheTogYmxvY2s7Cn0KCgo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/vis","sourcesContent":["<template>\n  <div class=\"app-container\">\n      <el-steps :active=\"active\" finish-status=\"success\">\n        <el-step title=\"完成相应操作\"></el-step>\n        <el-step title=\"可视化结果\"></el-step>\n      </el-steps>\n\n    <div v-if=\"visMessageVisible\" >\n      <div style=\"padding-top: 30px;justify-content: center; display: flex;\">\n        <el-card :body-style=\"{ padding: '0px' }\" shadow=\"hover\">\n          <el-image\n            style=\"width: 400px; height: 200px\"\n            :src=\"this.visMessage.dataImageUrl\"\n            :preview-src-list=\"[this.visMessage.dataImageUrl]\">\n          </el-image>\n          <div style=\"padding: 10px;\">\n            <el-upload\n              ref=\"upload\"\n              class=\"upload-demo\"\n              :action=\"action\"\n              :limit=\"1\"\n              :data=\"formData\"\n              :on-change=\"onChangeUpload\"\n              :on-success=\"onSuccessUpload\"\n              :auto-upload=\"false\">\n              <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>\n              <!--              <el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\">上传到服务器</el-button>-->\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg,png,bmp文件，且不超过10MB</div>\n            </el-upload>\n          </div>\n\n          <div style=\"padding: 10px;\">\n            <div>要使用的模型: </div>\n            <el-select label=\"要使用的模型\" v-model=\"selectedModel\" placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in modelOptions\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\">\n              </el-option>\n            </el-select>\n          </div>\n        </el-card>\n      </div>\n      <div style=\"padding-top: 30px;justify-content: center; display: flex;\">\n        <el-card :body-style=\"{ padding: '0px' }\" shadow=\"hover\">\n          <el-transfer v-model=\"selectedVisContent\" :data=\"visContent\" :titles=\"['未选择的', '已选择的']\"></el-transfer>\n        </el-card>\n      </div>\n    </div>\n    <div v-if=\"loadResult === true\" style=\"text-align: center\">\n      <el-main v-loading=\"loadResult\" v-if=\"loadResult === true\" style=\"height: 200px;\">\n        正在结果可视化处理，请稍后...\n      </el-main>\n     </div>\n    <div style=\"padding-top: 30px;justify-content: center; display: flex;\" v-if=\"visMessageVisible\">\n      <el-card :body-style=\"{ padding: '0px' }\" shadow=\"hover\">\n        <el-button class=\"el-footer\" type=\"success\" @click=\"next\">下一步</el-button>\n      </el-card>\n    </div>\n    <div v-if=\"active === 2\" style=\"padding-top: 30px; text-align: center\">\n      <el-main>\n        <el-row type=\"flex\" justify=\"center\" align=\"middle\">\n          <el-card  shadow=\"hover\">\n\n            <el-image\n              style=\"width: 512px;height: 512px\"\n              :src=\"this.inferImage\"\n              :preview-src-list=\"[this.inferImage]\">\n            </el-image>\n          </el-card>\n          <el-card  shadow=\"hover\">\n            <div style=\"width: 450px; height: 512px\">\n              <span>详细信息</span>\n              <div style=\"padding-bottom: 10px\"></div>\n<!--              <div-->\n<!--                v-for=\"item in this.dataResultsList\"-->\n<!--                :style=\"`color: ${item.dataResultColors}`\"-->\n<!--              >-->\n<!--              </div>-->\n              <el-table\n                :data=\"this.dataResultsList\"\n                border\n                style=\"width: 100%;\">\n                  <el-table-column align=\"center\" label=\"ID\" width=\"40px\">\n                    <template slot-scope=\"scope\">\n                      <div :style=\"`color: ${scope.row.dataResultColors}`\">\n                      {{ scope.$index }}\n                      </div>\n                    </template>\n                  </el-table-column>\n\n                <el-table-column label=\"目标位置[X, Y]\" >\n                  <template slot-scope=\"scope\">\n                    <div :style=\"`color: ${scope.row.dataResultColors}`\">\n                      {{ scope.row.dataResults.centerXY }}\n                    </div>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"目标大小[W, H]\" >\n                  <template slot-scope=\"scope\">\n                    <div :style=\"`color: ${scope.row.dataResultColors}`\">\n                      {{ scope.row.dataResults.WH }}\n                    </div>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"目标航向角\" >\n                  <template slot-scope=\"scope\">\n                    <div :style=\"`color: ${scope.row.dataResultColors}`\">\n                      {{ scope.row.dataResults.course }}\n                    </div>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </el-card>\n        </el-row>\n      </el-main>\n\n\n      <div style=\"padding-top: 30px;justify-content: center; display: flex;\">\n        <el-card :body-style=\"{ padding: '0px' }\" shadow=\"hover\">\n          <el-button type=\"primary\" @click=\"\">导出结果</el-button>\n        </el-card>\n      </div>\n    </div>\n\n\n  </div>\n</template>\n\n<style>\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n.avatar {\n  width: 178px;\n  height: 178px;\n  display: block;\n}\n\n\n</style>\n\n<script>\n\nimport { getAction, getActionBlob, postAction, postActionBlob } from '@/api/manage'\nimport { getApiBaseUrl, getDataImageUrl } from '@/api/request1'\n\nexport default {\n  data() {\n    return {\n      list: null,\n      listLoading: true,\n      dataImageUrl: \"\",\n      srcDataImageList: [],\n      selectedModel: null,\n      modelOptions:[],\n      formData: {},\n      active: 0,\n      loadResult: false,\n      inferImage: \"\",\n      visMessageVisible:true,\n      action: getApiBaseUrl() + '/interpretation/analyseAndVisualizeData',\n      visMessage:{\n        dataCreateTime: \"\",\n        modelName: \"\",\n        resultCreateTime: \"\",\n        dataImageUrl: \"\",\n      },\n      dataResultsList: [],\n      form:{},\n      visContent: [\n        {\n          key: 0,\n          label: '原图'\n        },\n        {\n          key: 1,\n          label: `船舶检测`,\n        },\n        {\n          key: 2,\n          label: `海陆分割`,\n        },\n        {\n          key: 3,\n          label: `航向预测`,\n        },\n      ],\n      selectedVisContent: [],\n      apiUrl:{\n        getVisMessage: 'interpretation/getVisMessage',\n        getModelList: 'model/list',\n        getFileURLPictures: 'interpretation/getFileURLPictures'\n      }\n    }\n  },\n  created() {\n    this.fetchVisMessage()\n    this.loadModelOptions()\n  },\n  methods: {\n    onChangeUpload(file, fileList) {\n      console.log(URL.createObjectURL(file.raw))\n      this.visMessage.dataImageUrl = URL.createObjectURL(file.raw);\n    },\n    onSuccessUpload(res, file, fileList){\n      console.log(res)\n      const arr = res.result.visPics[0].save_path.split(\"/\")\n      const fileName = arr[arr.length - 1]\n      getActionBlob(this.apiUrl.getFileURLPictures + \"/\" + fileName).then((res)=>{\n        let blob = new window.Blob([res.data])\n        this.inferImage = window.URL.createObjectURL(blob)\n      })\n\n      // 提出数值结果\n      let i = 0\n      const dataResults = res.result.anaData[0]\n      const dataResultColors = res.result.visPics[0].box_color\n      while(i<dataResults.length){\n        this.dataResultsList.push({\n          'dataResults': dataResults[i] ,\n          'dataResultColors': dataResultColors[i]\n        })\n        i++\n      }\n      console.log(this.dataResultsList)\n      this.loadResult = false\n      this.active++\n    },\n    fetchVisMessage(){\n      postAction(this.apiUrl.getVisMessage + '/' + this.$route.query.id).then((res)=>{\n        console.log(res.data.result)\n        this.visMessage = res.data.result\n\n        let arr = this.visMessage.dataImageUrl.split(\"\\\\\")\n        this.visMessage.dataImageUrl = getDataImageUrl(arr[arr.length-1])\n        this.srcDataImageList = [this.visMessage.dataImageUrl]\n      })\n    },\n    loadModelOptions(){\n      getAction(this.apiUrl.getModelList).then((res)=>{\n        console.log(res.data.result)\n        this.modelOptions = res.data.result.records\n      })\n    },\n    next(){\n      if (this.active === 0){\n        this.visMessageVisible = false\n        this.loadResult = true\n        // this.timer = setTimeout(()=>{   //TODO:设置延迟执行,如果模型算法库可用则记得去掉\n        //   this.loadResult = false\n        //   this.inferImage = getDataImageUrl(\"inference.png\")\n        //   console.log(this.inferImage)\n        //   this.active++\n        // },3000);\n        this.formData.modelId = this.selectedModel\n        this.formData.visOptions = this.selectedVisContent\n        console.log('upload')\n        this.$refs.upload.submit()\n      }\n      this.active++\n    },\n  }\n}\n</script>\n"]}]}