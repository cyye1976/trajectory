{"remainingRequest":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\src\\views\\data\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\src\\views\\data\\index.vue","mtime":1642561447232},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\Workplace\\msanet-system\\msanet-system-page\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEFjdGlvbiwgZ2V0QWN0aW9uQmxvYiwgcG9zdEFjdGlvbiB9IGZyb20gJ0AvYXBpL21hbmFnZScKaW1wb3J0IHsgZ2V0QXBpQmFzZVVybCwgZ2V0RGF0YUltYWdlVXJsIH0gZnJvbSAnQC9hcGkvcmVxdWVzdDEnCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpc3Q6IG51bGwsCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICBlZGl0RGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGFkZERpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBpbWFnZURpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBhY3Rpb246IGdldEFwaUJhc2VVcmwoKSArICcvZGF0YS9hZGQnLAogICAgICBkYXRhSW1hZ2VVcmw6ICIiLAogICAgICBzcmNEYXRhSW1hZ2VMaXN0OiBbXSwKICAgICAgYXBpVXJsOiB7CiAgICAgICAgbGlzdDogJy9kYXRhL2xpc3QnLAogICAgICAgIGRlbGV0ZTogJy9kYXRhL2RlbGV0ZScsCiAgICAgICAgdXBkYXRlOiAnL2RhdGEvdXBkYXRlJywKICAgICAgICBhZGQ6ICcvZGF0YS9hZGQnLAogICAgICAgIHVwbG9hZERhdGE6IGdldEFwaUJhc2VVcmwoKSArICcvZGF0YS9hZGQnLAogICAgICAgIGdldFBpY3R1cmU6ICcvZGF0YS9nZXRQaWN0dXJlJwogICAgICB9LAogICAgICBmb3JtOiB7fQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hEYXRhKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoRGF0YSgpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWUKICAgICAgZ2V0QWN0aW9uKHRoaXMuYXBpVXJsLmxpc3QpLnRoZW4oKHJlcykgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLnJlc3VsdC5yZWNvcmRzKQogICAgICAgIHRoaXMubGlzdCA9IHJlcy5kYXRhLnJlc3VsdC5yZWNvcmRzCiAgICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlCiAgICAgIH0pCiAgICB9LAogICAgZGVsZXRlT25DbGljayhlKSB7CiAgICAgIHBvc3RBY3Rpb24odGhpcy5hcGlVcmwuZGVsZXRlICsgJy8nICsgZSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpCiAgICAgICAgdGhpcy5mZXRjaERhdGEoKQogICAgICB9KQogICAgfSwKICAgIGVkaXRPbkNsaWNrKGUpIHsKICAgICAgdGhpcy5mb3JtID0gZQogICAgICB0aGlzLmVkaXREaWFsb2dWaXNpYmxlID0gdHJ1ZQogICAgfSwKICAgIGVkaXRDb25maXJtT25DbGljaygpIHsKICAgICAgcG9zdEFjdGlvbih0aGlzLmFwaVVybC51cGRhdGUsIHRoaXMuZm9ybSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpCiAgICAgICAgdGhpcy5mZXRjaERhdGEoKQogICAgICAgIHRoaXMuZWRpdERpYWxvZ1Zpc2libGUgPSBmYWxzZQogICAgICB9KQogICAgfSwKICAgIHN1Ym1pdFVwbG9hZCgpIHsKICAgICAgY29uc29sZS5sb2coJ3VwbG9hZCcpCiAgICAgIHRoaXMuJHJlZnMudXBsb2FkLnN1Ym1pdCgpCiAgICAgIGxldCBwYXJhbSA9IG5ldyBGb3JtRGF0YSgpCiAgICAgIHRoaXMuZmlsZUxpc3QuZm9yRWFjaChmaWxlID0+IHsKICAgICAgICBwYXJhbS5hcHBlbmQoImZpbGVzIiwgZmlsZS5yYXcpCiAgICAgICAgcGFyYW0uYXBwZW5kKCJmaWxlTmFtZXMiLCBmaWxlLm5hbWUpCiAgICAgIH0pOwogICAgICBwYXJhbS5zZXQoImRlc2NyaXB0aW9uIiwgdGhpcy5mb3JtLmRlc2NyaXB0aW9uKQogICAgICBwb3N0QWN0aW9uKHRoaXMuYXBpVXJsLnVwbG9hZERhdGEsIHBhcmFtKQogICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZygndXBsb2FkIHN1Y2Nlc3MnKQogICAgICAgICAgdGhpcy5hZGREaWFsb2dWaXNpYmxlID0gZmFsc2UKICAgICAgICAgIHRoaXMuZmV0Y2hEYXRhKCkKICAgICAgICB9KQogICAgfSwKICAgIGRhdGFJbWFnZUNsaWNrKGUpIHsKICAgICAgLy8gY29uc29sZS5sb2coZS5maWxlVXJsKQogICAgICAvLyBjb25zdCBhcnIgPSBlLmZpbGVVcmwuc3BsaXQoJ1xcJykKICAgICAgLy8gY29uc3QgZmlsZU5hbWUgPSBhcnJbYXJyLmxlbmd0aCAtIDFdCiAgICAgIC8vIHRoaXMuZGF0YUltYWdlVXJsID0gZ2V0RGF0YUltYWdlVXJsKGZpbGVOYW1lKQogICAgICBnZXRBY3Rpb25CbG9iKHRoaXMuYXBpVXJsLmdldFBpY3R1cmUgKyAiLyIgKyBlLmlkKS50aGVuKChyZXMpPT57CiAgICAgICAgbGV0IGJsb2IgPSBuZXcgd2luZG93LkJsb2IoW3Jlcy5kYXRhXSkKICAgICAgICBsZXQgdXJsID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYikKICAgICAgICB0aGlzLmRhdGFJbWFnZVVybCA9IHVybAogICAgICAgIHRoaXMuc3JjRGF0YUltYWdlTGlzdCA9IFt0aGlzLmRhdGFJbWFnZVVybF0KICAgICAgfSkKICAgICAgdGhpcy5pbWFnZURpYWxvZ1Zpc2libGUgPSB0cnVlCiAgICB9LAogICAgb25VcGxvYWRTdWNjZXNzKCkgewogICAgICBjb25zb2xlLmxvZygndXBsb2FkIHN1Y2Nlc3MnKQogICAgICB0aGlzLmFkZERpYWxvZ1Zpc2libGUgPSBmYWxzZQogICAgICB0aGlzLmZldGNoRGF0YSgpCiAgICB9LAogICAgb25VcGxvYWRFcnJvcigpIHsKICAgICAgY29uc29sZS5sb2coJ3VwbG9hZCBlcnJvcicpCiAgICAgIHRoaXMuYWRkRGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICAgIHRoaXMuZmV0Y2hEYXRhKCkKICAgIH0sCiAgICBodHRwUmVxdWVzdChmaWxlKSB7CiAgICAgIGNvbnNvbGUubG9nKCJodHRwUmVxdWVzdCIsIGZpbGUpCiAgICB9LAogICAgb25DaGFuZ2UoZmlsZSwgZmlsZUxpc3QpIHsKICAgICAgdGhpcy5maWxlTGlzdCA9IGZpbGVMaXN0CiAgICB9LAogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"index.vue","sourceRoot":"src/views/data","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div style=\"padding-bottom: 10px\">\n      <el-button type=\"primary\" @click=\"addDialogVisible = true\">上传数据</el-button>\n    </div>\n    <el-table\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      element-loading-text=\"Loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column align=\"center\" label=\"ID\" width=\"95\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.id }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"描述\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.description }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"创建时间\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\"/>\n          <span>{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"操作\" width=\"270\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" icon=\"el-icon-picture-outline\" @click=\"dataImageClick(scope.row)\"></el-button>\n          <el-button type=\"success\" icon=\"el-icon-edit\" @click=\"editOnClick(scope.row)\"></el-button>\n          <el-button type=\"danger\" icon=\"el-icon-delete\" @click=\"deleteOnClick(scope.row.id)\"></el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog\n      title=\"编辑\"\n      :visible.sync=\"editDialogVisible\"\n    >\n      <span>\n        <el-form ref=\"form\" :model=\"form\" width=\"80px\">\n          <el-form-item label=\"文件路径:\">\n            <el-input v-model=\"form.fileUrl\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"描述:\">\n            <el-input v-model=\"form.description\" type=\"textarea\"></el-input>\n          </el-form-item>\n        </el-form>\n      </span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editConfirmOnClick()\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog\n      title=\"上传数据\"\n      :visible.sync=\"addDialogVisible\"\n    >\n      <span>\n        <el-form ref=\"form\" :model=\"form\" width=\"80px\" action=\"\">\n          <el-form-item label=\"文件路径:\">\n            <el-upload\n              ref=\"upload\"\n              :http-request=\"httpRequest\"\n              :on-change=\"onChange\"\n              class=\"upload-demo\"\n              :action=\"action\"\n              multiple\n              :data=\"form\"\n              :auto-upload=\"false\"\n              :on-success=\"onUploadSuccess\"\n              :on-error=\"onUploadError\"\n            >\n              <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>\n              <!--              <el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\">上传到服务器</el-button>-->\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg,png,bmp文件，且不超过10MB</div>\n            </el-upload>\n          </el-form-item>\n          <el-form-item label=\"描述:\">\n            <el-input v-model=\"form.description\" type=\"textarea\"></el-input>\n          </el-form-item>\n        </el-form>\n      </span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitUpload()\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog\n      title=\"图片\"\n      :visible.sync=\"imageDialogVisible\"\n      width=\"30%\"\n      center\n    >\n      <div style=\"text-align: center\">\n        <el-image\n          style=\"width: 200px; height: 200px\"\n          :src=\"dataImageUrl\"\n          :preview-src-list=\"srcDataImageList\"\n        >\n        </el-image>\n<!--        <img :src=\"dataImageUrl\" alt=\"\" style=\"width: 100%;\">-->\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button type=\"primary\" @click=\"imageDialogVisible = false\">确 定</el-button>\n  </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getAction, getActionBlob, postAction } from '@/api/manage'\nimport { getApiBaseUrl, getDataImageUrl } from '@/api/request1'\n\nexport default {\n  data() {\n    return {\n      list: null,\n      listLoading: true,\n      editDialogVisible: false,\n      addDialogVisible: false,\n      imageDialogVisible: false,\n      action: getApiBaseUrl() + '/data/add',\n      dataImageUrl: \"\",\n      srcDataImageList: [],\n      apiUrl: {\n        list: '/data/list',\n        delete: '/data/delete',\n        update: '/data/update',\n        add: '/data/add',\n        uploadData: getApiBaseUrl() + '/data/add',\n        getPicture: '/data/getPicture'\n      },\n      form: {}\n    }\n  },\n  created() {\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true\n      getAction(this.apiUrl.list).then((res) => {\n        console.log(res.data.result.records)\n        this.list = res.data.result.records\n        this.listLoading = false\n      })\n    },\n    deleteOnClick(e) {\n      postAction(this.apiUrl.delete + '/' + e).then((res) => {\n        console.log(res.data)\n        this.fetchData()\n      })\n    },\n    editOnClick(e) {\n      this.form = e\n      this.editDialogVisible = true\n    },\n    editConfirmOnClick() {\n      postAction(this.apiUrl.update, this.form).then((res) => {\n        console.log(res.data)\n        this.fetchData()\n        this.editDialogVisible = false\n      })\n    },\n    submitUpload() {\n      console.log('upload')\n      this.$refs.upload.submit()\n      let param = new FormData()\n      this.fileList.forEach(file => {\n        param.append(\"files\", file.raw)\n        param.append(\"fileNames\", file.name)\n      });\n      param.set(\"description\", this.form.description)\n      postAction(this.apiUrl.uploadData, param)\n        .then(res => {\n          console.log('upload success')\n          this.addDialogVisible = false\n          this.fetchData()\n        })\n    },\n    dataImageClick(e) {\n      // console.log(e.fileUrl)\n      // const arr = e.fileUrl.split('\\\\')\n      // const fileName = arr[arr.length - 1]\n      // this.dataImageUrl = getDataImageUrl(fileName)\n      getActionBlob(this.apiUrl.getPicture + \"/\" + e.id).then((res)=>{\n        let blob = new window.Blob([res.data])\n        let url = window.URL.createObjectURL(blob)\n        this.dataImageUrl = url\n        this.srcDataImageList = [this.dataImageUrl]\n      })\n      this.imageDialogVisible = true\n    },\n    onUploadSuccess() {\n      console.log('upload success')\n      this.addDialogVisible = false\n      this.fetchData()\n    },\n    onUploadError() {\n      console.log('upload error')\n      this.addDialogVisible = false\n      this.fetchData()\n    },\n    httpRequest(file) {\n      console.log(\"httpRequest\", file)\n    },\n    onChange(file, fileList) {\n      this.fileList = fileList\n    },\n  }\n}\n</script>\n"]}]}